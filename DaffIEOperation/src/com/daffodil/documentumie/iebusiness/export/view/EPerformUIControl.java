/*
 * EPerformUIControl.java
 *
 * Created on 09 July 2008, 13:52
 */

package com.daffodil.documentumie.iebusiness.export.view;

import java.awt.GridBagConstraints;

import javax.swing.ImageIcon;
import javax.swing.JLabel;

import com.daffodil.documentumie.iebusiness.AbstractUIControl;

/**
 *
 * @author  Administrator
 */
public class EPerformUIControl extends AbstractUIControl{
	StringBuffer progressBuffer;
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/** Creates new form EPerformUIControl */
	public EPerformUIControl() {
		initComponents();
	}

	public void setinitialProgressValue(int maxVal) {
		exportProgressBar.setMinimum(0);
		exportProgressBar.setMaximum(maxVal);
		exporting_JLabel.setText("0 out of " + maxVal);
		renderExportImage("/com/daffodil/documentumie/iebusiness/export/view/images/export_performing.gif");
	}

	public void updateProgressBar(int val, String fileName){
		exportProgressBar.setValue(val);
		progressBuffer = new StringBuffer();
		progressBuffer.append(val).append(" out of ").append(exportProgressBar.getMaximum());

		if(fileName!=null){
			
			if(fileName.length()>30){
				String s1 = fileName.substring(0, 24);
				String s2 = fileName.substring(fileName.length()-5);
				fileName = s1 + "~" + s2 ;
			}
			
			progressBuffer.append("( Exporting :").append(fileName).append(")");
		}
		exporting_JLabel.setText(progressBuffer.toString());
	}

	public void renderExportImage(String path) {

		GridBagConstraints gridBagConstraints = null;
		if (gridBagConstraints == null) {
			gridBagConstraints = new java.awt.GridBagConstraints();
			gridBagConstraints.gridx = 0;
			gridBagConstraints.gridy = 0;
			gridBagConstraints.gridheight = 1;
			gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
			gridBagConstraints.weightx = 1.0;
			gridBagConstraints.weighty = 1.0;
			gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);
		}
		exportImage_JPanel.removeAll();
		exportImage_JPanel.add(new JLabel(new ImageIcon(this.getClass().getResource(path))),
				gridBagConstraints);
		exportImage_JPanel.repaint();
		getMainUIControl().getMainFrame().invalidate();
		getMainUIControl().getMainFrame().validate();
		getMainUIControl().getMainFrame().repaint();
	}
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		exportImage_JPanel = new javax.swing.JPanel();
		exportLabel_JPanel = new javax.swing.JPanel();
		exporting_JLabel = new javax.swing.JLabel();
		exportProgressBar_JPanel = new javax.swing.JPanel();
		exportProgressBar = new javax.swing.JProgressBar();

		setPreferredSize(new java.awt.Dimension(370, 355));
		setLayout(new java.awt.GridBagLayout());
		setOpaque(false);
		exportImage_JPanel.setOpaque(false);
		exportImage_JPanel.setMaximumSize(new java.awt.Dimension(370, 290));
		exportImage_JPanel.setPreferredSize(new java.awt.Dimension(370, 290));
		exportImage_JPanel.setLayout(new java.awt.GridBagLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 29.0;
//		gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 20);
		add(exportImage_JPanel, gridBagConstraints);
		exportLabel_JPanel.setOpaque(false);
		exportLabel_JPanel.setPreferredSize(new java.awt.Dimension(330, 21));
		exportLabel_JPanel.setLayout(new java.awt.GridBagLayout());

		exporting_JLabel.setText("Exporting");
		exporting_JLabel.setPreferredSize(new java.awt.Dimension(80, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		exportLabel_JPanel.add(exporting_JLabel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 20);
		add(exportLabel_JPanel, gridBagConstraints);

		exportProgressBar_JPanel.setOpaque(false);
		exportProgressBar_JPanel.setPreferredSize(new java.awt.Dimension(330, 21));
		exportProgressBar_JPanel.setLayout(new java.awt.GridBagLayout());

		exportProgressBar.setMinimumSize(new java.awt.Dimension(100, 20));
		exportProgressBar.setPreferredSize(new java.awt.Dimension(300, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
		exportProgressBar_JPanel.add(exportProgressBar, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(5, 20, 20, 20);
		add(exportProgressBar_JPanel, gridBagConstraints);
	}// </editor-fold>                        


	// Variables declaration - do not modify                     
	private javax.swing.JPanel exportImage_JPanel;
	private javax.swing.JPanel exportLabel_JPanel;
	private javax.swing.JProgressBar exportProgressBar;
	private javax.swing.JPanel exportProgressBar_JPanel;
	private javax.swing.JLabel exporting_JLabel;
	// End of variables declaration                   
	@Override
	public String getImageLocation() {
		String imageLocation = "/com/daffodil/documentumie/iebusiness/export/view/images/heading_e_complete.jpg";
		return imageLocation;
	}

	@Override
	public String getShowMessage() {
		String messgae = "Exporting the data from repository to selectd location.";
		return messgae;
	}

	@Override
	protected void postInilize() {
		// TODO Auto-generated method stub

	}

	@Override
	protected void preInilize() {
		// TODO Auto-generated method stub

	}

	@Override
	protected StringBuffer validateUIInputs() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected StringBuffer errorMessage() {
		// TODO Auto-generated method stub
		return null;
	}

}
