/*
 * MainFrame.java
 *
 * Created on 26 June 2008, 10:35
 */

package com.daffodil.documentumie.iebusiness;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;

import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

/**
 * 
 * @author Administrator
 */
public class IEIntroduction extends javax.swing.JPanel{

	private String imagePath;
	private String welcomeImgPath;
	private String operation;
	private boolean opSelected;
	private JFrame frame;
	private ButtonGroup buttonGroup;
	private PropertyChangeSupport propertyChangeSupport;

	/** Creates new form MainFrame */
	public IEIntroduction() {
		propertyChangeSupport = new PropertyChangeSupport(this);
		initComponents();
		installListener();
		initUI();
	}

	private void initUI() {
		buttonGroup = new ButtonGroup(); 
		buttonGroup.add(import_jRadioButton);
		buttonGroup.add(export_jRadioButton);
		import_jRadioButton.setSelected(true);
		showImages();
	}

	private void showImages(){
		imagePath = "/com/daffodil/documentumie/iebusiness/images/ie_documentum.gif";
		GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridheight = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);
		documentum_image_jPanel.add(new JLabel(new ImageIcon(this.getClass().getResource(imagePath))), gridBagConstraints);

		welcomeImgPath = "/com/daffodil/documentumie/iebusiness/images/heading_welcome.jpg";
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridheight = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);
		welcome_jPanel.add(new JLabel(new ImageIcon(this.getClass().getResource(welcomeImgPath))), gridBagConstraints);

	}
	
	private void installListener() {
		next_jButton.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {
				setOpSelected(true);
//				validateInput(); // Do Nothing
				
			}
		});
					
		exit_jButton.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent arg0) {
				IEMessageUtility iemessageutility = new IEMessageUtility(frame);
				int i = iemessageutility.showConfirmationMessageDialog("Are you sure ? You want to Exit from Utility.");
				if (i == JOptionPane.YES_OPTION) {
					System.exit(0);	
				}
				

			}
		});

	}
	
//		private void validateInput() {
//			if(getOperation().equals("Blank"))
//			{
//				//IEUtility.showMsgDialog("Please Select Import or Export",this);
//				
//			}
//		}
	
	public String getOperation() {
		
		return operation;
	}

	public void setOperation(String operation) {
		this.operation = operation;
	}

	public boolean isOpSelected() {
		return opSelected;
	}

	public void postInilize() {
		setOperation(import_jRadioButton.isSelected() ? "Import" : (export_jRadioButton.isSelected() ? "Export" : "Blank"));
	}

	public void setOpSelected(boolean opSelected) {
		boolean old = this.opSelected;
		this.opSelected = opSelected;
		propertyChangeSupport.firePropertyChange(new PropertyChangeEvent(this,
				"opSelected", old, opSelected));
	}

	/**
	 * Add a property change listener for a specific property.
	 * 
	 * @param propertyName
	 *            The name of the property to listen on.
	 * @param listener
	 *            The <code>PropertyChangeListener</code> to be added.
	 */
	public void addPropertyChangeListener(String propertyName,
			PropertyChangeListener listener) {
		propertyChangeSupport.addPropertyChangeListener(propertyName, listener);
	}

	/**
	 * Remove a property change listener for a specific property.
	 * 
	 * @param propertyName
	 *            The name of the property that was listened on.
	 * @param listener
	 *            The <code>PropertyChangeListener</code> to be removed
	 */
	public void removePropertyChangeListener(String propertyName,
			PropertyChangeListener listener) {
		propertyChangeSupport.removePropertyChangeListener(propertyName,
				listener);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		main_JPanel = new javax.swing.JPanel();
		welcome_jPanel = new javax.swing.JPanel();
		documentum_image_jPanel = new javax.swing.JPanel();
		IE_selection_jPanel = new javax.swing.JPanel();
		//message_jLabel = new javax.swing.JLabel();
		choice_IE_jPanel1 = new javax.swing.JPanel();
		import_jRadioButton = new JRadioButton();
		export_jRadioButton = new JRadioButton();
		button_jPanel = new javax.swing.JPanel();
		next_jButton = new DButton(){
	protected int getButtonWidth() {
				return 80;
			}
        };
		exit_jButton = new DButton(){
	protected int getButtonWidth() {
				return 80;
			}
        };
		message_JTextArea = new javax.swing.JTextArea();

		setPreferredSize(new Dimension(550,500));
		setLayout(new java.awt.GridBagLayout());

		main_JPanel.setLayout(new java.awt.GridBagLayout());
		main_JPanel.setBackground(new java.awt.Color(255, 255, 255));
		
		welcome_jPanel.setOpaque(false);
		welcome_jPanel.setPreferredSize(new java.awt.Dimension(0, 70));
		welcome_jPanel.setLayout(new java.awt.GridBagLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 3.0;
		gridBagConstraints.weighty = 7.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);
		main_JPanel.add(welcome_jPanel, gridBagConstraints);
		
		documentum_image_jPanel.setOpaque(false);
		documentum_image_jPanel.setPreferredSize(new java.awt.Dimension(1,
				430));
		
		documentum_image_jPanel.setLayout(new java.awt.GridBagLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 38.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
		main_JPanel.add(documentum_image_jPanel, gridBagConstraints);
		
		IE_selection_jPanel.setOpaque(false);
		IE_selection_jPanel.setPreferredSize(new java.awt.Dimension(391, 380));
		IE_selection_jPanel.setLayout(new java.awt.GridBagLayout());
		
		message_JTextArea.setColumns(20);
        message_JTextArea.setEditable(false);
        message_JTextArea.setLineWrap(true);
        message_JTextArea.setText("This Wizard helps to Import and Export meta data along with" +
        							" data   files of any format between local storage area and " +
        							" Documentum Repository.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        IE_selection_jPanel.add(message_JTextArea, gridBagConstraints);
        
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
				
		choice_IE_jPanel1.setOpaque(false);
		choice_IE_jPanel1.setLayout(new java.awt.GridBagLayout());
		
		import_jRadioButton.setOpaque(false);
		import_jRadioButton.setText("Import Into Documentum   ");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		choice_IE_jPanel1.add(import_jRadioButton, gridBagConstraints);

		export_jRadioButton.setOpaque(false);
		export_jRadioButton.setText("Export From Documentum");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		choice_IE_jPanel1.add(export_jRadioButton, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 18.0;
		IE_selection_jPanel.add(choice_IE_jPanel1, gridBagConstraints);
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 2.0;
		gridBagConstraints.weighty = 38.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
		main_JPanel.add(IE_selection_jPanel, gridBagConstraints);

		button_jPanel.setOpaque(false);
		button_jPanel.setPreferredSize(new java.awt.Dimension(110, 50));
		button_jPanel.setLayout(new java.awt.GridBagLayout());
		
		next_jButton.setText("Next");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		button_jPanel.add(next_jButton, gridBagConstraints);

		exit_jButton.setText("Exit");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		button_jPanel.add(exit_jButton, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 2.0;
		gridBagConstraints.weighty = 5.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
		main_JPanel.add(button_jPanel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		add(main_JPanel, gridBagConstraints);

//		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args
	 *            the command line arguments
	 */

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel IE_selection_jPanel;
	private javax.swing.JPanel button_jPanel;
	private javax.swing.JPanel choice_IE_jPanel1;
	private javax.swing.JPanel documentum_image_jPanel;
	private DButton exit_jButton;
	private JRadioButton export_jRadioButton;
	private JRadioButton import_jRadioButton;
	private javax.swing.JPanel main_JPanel;
	//private javax.swing.JLabel message_jLabel;
	private DButton next_jButton;
	private javax.swing.JPanel welcome_jPanel;
	 private javax.swing.JTextArea message_JTextArea;

	// End of variables declaration//GEN-END:variables
}
